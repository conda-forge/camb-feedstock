{% set name = "camb" %}
{% set version = "1.6.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - url: https://github.com/cmbant/CAMB/archive/{{ version }}.tar.gz  # [unix]
    sha256: e2144fc81fffe0c0212873cf4a04fddf66795c6edc2ca2298399350ffe697a70  # [unix]
    patches:   # [unix]
      - makefile_flags_0001.patch                                             # [unix]
  - fn: camb-{{ version }}-py3-none-win_amd64.whl  # [win]
    url: https://camb.info/camb_wheel.php?package=camb&version={{ version }}&template=py3-none-win_amd64  # [win]
    sha256: 8301f7de487114a1533f4301418742027e07233db2166875a7643b1634eb79f6  # [win]

build:
  number: 0
  skip: true  # [py<310]
  script:   # [win]
    - {{ PYTHON }} -m pip install camb-{{ version }}-py3-none-win_amd64.whl -vvv --no-deps --no-build-isolation --ignore-installed  # [win]

requirements:
  build:
    - {{ compiler('c') }}         # [not win]
    - {{ stdlib("c") }}           # [not win]
    - {{ compiler('fortran') }}   # [not win]
    - git                         # [not win]
    - make                        # [not win]
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
  host:
    - python
    - pip
    - setuptools
    - packaging
  run:
    - python
    - numpy
    - packaging
    - setuptools
    - sympy >=1.0
    - scipy >=1.0
    - {{ compiler('fortran') }}   # [not win]

test:
  imports:
    - camb
  files:
    - params.ini
    - test_pycamb.py
    - run_test.sh  # [win]

about:
  home: https://camb.info/
  license: LicenseRef-modified-LGPL
  license_file: {{ RECIPE_DIR }}/LICENSE
  summary: Code for Anisotropies in the Microwave Background
  description: |
    Code for Anisotropies in the Microwave Background
    by Antony Lewis and Anthony Challinor

    Features:
      - Support for closed, open and flat models
      - Scalar, vector and tensor modes including polarization
      - Output Cl, matter transfer functions, matter power spectrum and Ïƒ8
      - Fast computation to ~0.3-0.1% accuracy, with controllable accuracy level
      - Relatively structured and easily extendable Fortran 90 code
      - Efficient support for massive neutrinos
      - Absolute computations from correctly normalized initial power spectra
      - Computation of lensed CMB power spectra and lensing potential power spectrum
      - Internally parallelized for fast execution on multi-processor machines
      - Use CAMB with CosmoMC for Monte-Carlo parameter estimation
      - Constant equation of state quintessence (or variable PPF)
      - Support for general correlated adiabatic/isocurvature initial conditions
      - Accurate full-sky calculation of lensed power spectra (astro-ph/0502425)
      - Integrated interface to HALOFIT for non-linear fitting
      - support for arbitrary neutrino mass splittings
      - For 21cm, lensing and number count power spectra see this extension
      - For perturbed recombination and effect on small-scale baryons see this extension
      - Calculation of local primordial and CMB lensing bispectra
      - Easy-to-use Python wrapper
  doc_url: https://camb.info/readme.html
  dev_url: https://github.com/cmbant/CAMB

extra:
  recipe-maintainers:
    - beckermr
    - cmbant
