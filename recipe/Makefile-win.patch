diff --git a/Makefile b/Makefile
--- a/Makefile
+++ b/Makefile
@@ -5,76 +5,19 @@ FISHER=

 #native optimization does not work on Mac gfortran or heterogeneous clusters
 CLUSTER_SAFE ?= 0
-ifneq ($(CLUSTER_SAFE), 0)
 NONNATIVE = 1
-endif
-
-#Will detect ifort/gfortran or edit for your compiler
-ifneq ($(COMPILER),gfortran)
-ifortErr = $(shell which ifort >/dev/null; echo $$?)
-else
-ifortErr = 1
-endif
-ifeq "$(ifortErr)" "0"
-
-#Intel compiler
-F90C     = ifort
-FFLAGS = -W0 -WB -fpp
-DEBUGFLAGS = -g -check all -check noarg_temp_created -traceback -fpp -fpe0
-
-ifeq ($(shell uname -s),Darwin)
-SFFLAGS = -dynamiclib -fpic
-else
-SFFLAGS = -shared -fpic
-endif
-
-ifdef NONNATIVE
-FFLAGS+=-O3 -ipo -axCORE-AVX2
-else
-FFLAGS+=-fast
-endif
-
-ifortVer_major = $(shell ifort -v 2>&1 | cut -d " " -f 3 | cut -d. -f 1)
-ifeq ($(shell test $(ifortVer_major) -gt 15; echo $$?),0)
-FFLAGS+= -qopenmp
-DEBUGFLAGS+= -qopenmp
-else
-FFLAGS+= -openmp -vec_report0
-DEBUGFLAGS+= -openmp
-endif
-
-## This is flag is passed to the Fortran compiler allowing it to link C++ if required (not usually):
-F90CRLINK = -cxxlib
-MODOUT = -module $(OUTPUT_DIR)
-SMODOUT = -module $(DLL_DIR)
-ifneq ($(FISHER),)
-FFLAGS += -mkl
-endif

-else
-gfortErr = $(shell which gfortran >/dev/null; echo $$?)
-ifeq "$(gfortErr)" "0"
 COMPILER = gfortran
 #Gfortran compiler:
 #The options here work in v4.6+. Python wrapper needs v4.9+.
 F90C     = gfortran
 SFFLAGS =  -shared -fPIC

-FFLAGS =  -O3 -fopenmp -ffast-math -fmax-errors=4
+FFLAGS =  -O3 -fopenmp -fmax-errors=4 -static ${EXTRA_FFLAGS}
 DEBUGFLAGS = -cpp -g -fbounds-check -fbacktrace -ffree-line-length-none -fmax-errors=4 -ffpe-trap=invalid,overflow,zero
 MODOUT =  -J$(OUTPUT_DIR)
 SMODOUT = -J$(DLL_DIR)

-ifeq ($(shell uname -s),Darwin)
-NONNATIVE = 1
-endif
-ifndef NONNATIVE
-#Note this seems to make code slightly slower in some cases, use CLUSTER_SAFE=1 to test without
-FFLAGS+=-march=native
-endif
-endif
-endif
-
 IFLAG = -I

 #G95 compiler
